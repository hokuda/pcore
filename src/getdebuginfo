#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import os

os.environ['LANG']='C'

DEBUGINFO_RPMS_DIR='./debuginfo_rpms'
RELATEDRPMS = 'related_rpms.txt'
DNF='/usr/bin/dnf'
DNF_DEBUGINFO_INSTALL=DNF + ' debuginfo-install'
DEBUGINFO_INSTALL='/usr/bin/debuginfo-install'
YUM_DEBUGINFO_INSTALL=DEBUGINFO_INSTALL
DEBUG = True


def my_name():
    return sys.argv[0].split('/')[-1]


THIS = my_name()


def debug(message):
    if DEBUG:
        print('debug: ' + message)


def info(message):
    print('info: ' + message)


def warn(message):
    print('warn: ' + message)


def is_root():
    return os.geteuid() == 0


def has_dnf():
    return os.access(DNF, os.X_OK)


def has_debuginfo_install():
    return os.access(YUM_DEBUGINFO_INSTALL, os.X_OK)


def make_directory():
    if not os.path.exists(DEBUGINFO_RPMS_DIR):
        os.makedirs(DEBUGINFO_RPMS_DIR)


def get_debuginfo_install_command(packages):
    """
    dnf debuginfo-install --downloadonly --downloaddir DEBUGINFO_RPMS_DIR pkg pkg ...
    """
    if (has_dnf()):
        debuginfo_install = DNF_DEBUGINFO_INSTALL
    else:
        debuginfo_install = YUM_DEBUGINFO_INSTALL
    command = ' '.join(
        [debuginfo_install, '-y', '--downloadonly', '--downloaddir', DEBUGINFO_RPMS_DIR] + packages
    )
    return command


def download_debuginfo(packages):
    command = get_debuginfo_install_command(packages)
    info('Running ' + command)
    os.system(command)


def unpack_debuginfo():
    files = os.listdir(DEBUGINFO_RPMS_DIR)
    for file in files:
        file = DEBUGINFO_RPMS_DIR + '/' + file
        command = 'rpm2cpio ' + file + ' | cpio -idu'
        info('Running ' + command)
        os.system(command)


def parse_relatedrpms():
    packages = []
    with open(RELATEDRPMS, 'r') as f:
        for line in set([line.rstrip() for line in f.readlines()]):
            tokens = line.split()
            if len(tokens)>1:
                warn("parse_relatedrpms: " + line)
            else:
                warn(line)
                packages.append(line)
    return packages


def main():
    make_directory()
    packages = parse_relatedrpms()
    download_debuginfo(packages)
    unpack_debuginfo()
    sys.exit('\n\nDebuginfo provided.\nRun ./opencore.sh')

if __name__ == '__main__':
    if __file__ == "./test":
        import doctest
        doctest.testmod(verbose=True)
        sys.exit(0)
    if ((not has_dnf()) and (not has_debuginfo_install())):
        sys.exit(THIS + ' requires debuginfo-install command.\nRun yum install yum-utils\n')
    if not is_root():
        sys.exit("You need to run " + THIS + " as root.")
    main()
